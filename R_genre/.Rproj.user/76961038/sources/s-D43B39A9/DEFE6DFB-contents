#### Yann Aubineau  2021-2022   Atelier de Recherche

## Librairies

library(tidyverse)

# Données

library(readxl)
Adsets <- read_excel("211025_Enq representation culture_Adsets.xlsx")

data <- readxl::read_xlsx("210924_Enq representation culture.xlsx")

## Il faudrait recoder le nom des variables pour les rendre facile d'usage
# Exemple : la variable `SD2. Quel est le code postal de votre commune de résidence ?5 chiffres maximum` sera renommée codepostal

# Recodage du nom de nombreuses variables
donnees <- data %>% mutate(
  token = data$`Response Token`,
  echantillon = data$Echantillon,
  age = data$`SD1. Quel âge avez-vous ?`,
  codepostal = data$`SD2. Quel est le code postal de votre commune de résidence ?5 chiffres maximum`,
  ville = data$Ville,
  departement = data$`Département`,
  gregion = data$`Grande région`,
  uda9 = data$UDA9,
  uda5 = data$UDA5,
  unite_urbaine = data$`Unité urbaine`,
  unite_urbaine_d = data$`Taille d'unité urbaine détaillée`,
  commune = data$Commune,
  zone = data$Zone,
  sexe = data$`SD3. Êtes-vous :`,
  diplome = data$`SD4. Quel est le niveau de diplôme le plus élevé que vous avez obtenu ?`,
  occupation = data$`SD5. Lequel de ces énoncés décrit le mieux votre occupation principale ?`,
  occupation_autre = data$`SD5. Autre (précisez) ::Lequel de ces énoncés décrit le mieux votre occupation principale ?`,
  csp = data$CSP
)
view(data)
# Création d'un identifiant pour chaque individu, de 1 à 2000

for (effectif in seq(1,nrow(donnees))){
  donnees$id[effectif] <- effectif
}



## On remarque que les questions sur le musée sont particulièrement peu pratiques à utiliser pour faire des programmes lisibles, je propose de les transformer ainsi:
# Q1 - Q2a - Q2b - Q3a - Q3b - etc 


# Pour cela, je dois isoler le nom des variables à changer

colonnes_a_changer <- data.frame()
for(i in seq(1,30)){
  colonnes_a_changer <- data %>% select(contains(paste("Q",as.character(i),".",sep =""))) %>% colnames() %>% as.data.frame() %>% bind_rows(colonnes_a_changer,.)
}

# J'isole leur numero de question

numero_question <- data.frame()
numero_question[1,1] <- "Q1"
numero_question[1,2] <- 1

for (j in seq(2,nrow(colonnes_a_changer))){
    numero_question[j,1] <- sub("[.]$", "",(str_trim(substr(colonnes_a_changer[j,1],1,4),"right")))
    
    # Puis je vais compter en combien de sous-questions la question 1 est divisée (une seule question ici, mais la question 2 est composée de 2 questions par exemple)
    if (numero_question[j,1] != numero_question[j-1,1]){
      numero_question[j,2] <- 1
    }
    else{
      numero_question[j,2] <- numero_question[j-1,2] + 1
    }
}

# Je transforme chaque nombre de sous-questions en lettres (1 => a , 2 => b, etc) 
numero_question[,3]<- tolower(chartr("123456789", "ABCDEFGHI", numero_question[,2]))
numero_question[,4] <- paste(numero_question[,1],numero_question[,3], sep = "")


# Pour ensuite associer chaque question avec sa sous-question, sauf si elle n'a pas de sous-question
# cela donne : Q1 , Q2a, Q2b, Q3a, etc

for (j in seq(1,nrow(colonnes_a_changer))){
  if (numero_question[j,1] != numero_question[j+1,1] & numero_question[j,3] == "a"){
    numero_question[j,5] <- numero_question[j,1]
  }
  else{
    numero_question[j,5] <- paste(numero_question[j,1],numero_question[j,3], sep = "")
  }
}

# J'isole ensuite les vecteurs des anciens noms de variables et des nouveaux, et j'ajoute les variables avec leurs nouveaux noms SANS supprimer les anciennes variables (avec les noms pas pratiques donc)

oldnames <- as.vector(colonnes_a_changer[,1])
newnames <- numero_question[,5]

donnees_complete <- donnees %>% rename_at(vars(oldnames), ~ newnames) %>% select(newnames) %>% bind_cols(donnees,.)


## Je produis finalement la base de données ne contenant toutes les variables renommées et prête à être utilisées

donnees_propre <- donnees_complete %>% select( 
                              # Rajoutées par mutate
                              id,
                              token,
                              echantillon,
                              age,
                              codepostal,
                              ville,
                              departement,
                              gregion,
                              uda9,
                              uda5,
                              unite_urbaine,
                              unite_urbaine_d,
                              commune,
                              zone,
                              sexe,
                              diplome,
                              occupation,
                              occupation_autre,
                              csp,
                              # Questions sur musée
                              newnames)
view(donnees_propre)

bdd <- donnees_propre

